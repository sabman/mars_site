== Introduction

This application is written for data management of the MARS database. 
It is runs on a linux platform with the following requirements:

1. Ruby Virtual Management (RVM) 
2. Ruby 1.8.7 It has been tested on Ruby 1.8.7
3. Oracle Spatial Database 11g
4. Shoaib Burq's custom ORACLE-spatial libraries for (de)seriliazing data
5. and custom GeoJSON libraries for extending OGC SimpleFeature for SQL to GeoJSON in GeoRuby

== Components of the app

=== 1. Production database: 
a) Config file location: ~/root/opt/lib/config/database.yml
    production: 
      adapter: oracle_enhanced
      database: 'mica:1521/oraprod'
      username: sburq
      password: ***
WARNING: Password expires every 30 days

=== 2. Development database: 
a) Config file location: RAILS_ROOT/config/database.yml
    development:
      adapter: oracle_enhanced
      database: 'craton:1521/oradev' 
      username: sburq
      password: ***
WARNING: Password expires every 30 days

=== 3. LDAP superuser:
a) Config file location: RAILS_ROOT/config/ldap_root_user.yml
This is required in order to perform LDAP lookups in GA active directory
WARNING: Password expires every 30 days

=== 4. LDAP configuration file
a) Config file location: RAILS_ROOT/config/ldap.yml
This file contains the GA's LDAP configuration paramters

=== 5. Thins cluster configuration
a) Config file: RAILS_ROOT/config/thin/cluster_[dev|prod].yml
Thin is a light weight web server that can be run in a cluster mode behind a 
traditional webserver like Apache or Nginx. Here we run multiple instances of 
Thins behind NGINX 

=== 6. NGINX
a) Config file: ~/root/conf/nginx.conf

=== 7. Version control
the code is in a local git repository. It can be exported to subversion if needed

=== 8. Deployment
a) Config file: RAILS_ROOT/deploy.rb
deployment uses git to checkout the latest code and pushes to the production 
server and restarts the production thin cluster and NGINX

== Initialization routines
1. LDAP superuser

== Environment

This 


== Deployment

The deployment is done using capistrano. It requires the following information


== Version Control

== Database

== LDAP

== Libraries

== Documention

== Tests

== Search
